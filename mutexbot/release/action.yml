name: "MutexBot Release"
description: "Release a resource on MutexBot"
inputs:
  api-key:
    description: "API Key"
    required: true
  resource-name:
    description: "Name of the resource to release"
    required: true
  force-release:
    description: "Force the release of the resource"
    required: false
    default: false
runs:
  using: "composite"
  steps:
    - name: "Release resource"
      shell: bash -euo pipefail {0}
      env:
        API_KEY: ${{ inputs.api-key }}
        RESOURCE_NAME: ${{ inputs.resource-name }}
        FORCE_RELEASE: ${{ inputs.force-release }}
      run: |
        handle_error() {
          echo "Error: $1"
          cat response.json
          rm response.json
          exit 1
        }

        ACTION=$([ "${FORCE_RELEASE}" == "true" ] && echo "force-release" || echo "release")
        RESPONSE=$(curl -s --retry 15 --retry-delay 2 -o response.json -w "%{http_code}" -X POST "https://mutexbot.com/api/resources/global/${RESOURCE_NAME}/${ACTION}" \
          -H "X-API-KEY: ${API_KEY}" \
          -H "Content-Type: application/json" \
          -d "{}")

        if [ "$RESPONSE" -eq 200 ]; then
          echo "Resource released successfully."
          rm response.json
        elif [ "$RESPONSE" -eq 208 ]; then
          handle_error "Resource not reserved. Aborting."
        elif [ "$RESPONSE" -eq 401 ]; then
          handle_error "Unauthorized! Check your API keys."
        elif [ "$RESPONSE" -eq 404 ]; then
          handle_error "Resource not found."
        elif [ "$RESPONSE" -eq 409 ]; then
          handle_error "Resource reserved by someone else"
        else
          handle_error "Unexpected status code: $RESPONSE"
        fi
